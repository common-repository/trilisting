<?php
/**
 *  Export xml
 */

// Exit if accessed directly
if ( ! defined( 'ABSPATH' ) ) {
	exit;
}

$defaults = [
	'acf_posts' => [],
	'nonce'     => '',
];
$my_options = array_merge( $defaults, $_POST);

// validate nonce
if ( ! wp_verify_nonce( $my_options['nonce'], 'export' ) ) {
	wp_die( esc_html__( 'Error', 'trilisting' ) );
}

// check for posts
if ( empty( $my_options['acf_posts'] ) ) {
	return;
}

/**
 * Version number for the export format.
 */
if ( ! defined( 'WXR_VERSION' ) ) {
	define( 'WXR_VERSION', '1.1' );
}

/**
 * ACF helpers functions.
 */
require_once plugin_dir_path( dirname( __FILE__ ) ) . 'demo-export/export-helpers.php';

//xml
echo '<?xml version="1.0" encoding="' . get_bloginfo('charset') . "\" ?>\n";
?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<?php the_generator( 'export' ); ?>
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/<?php echo WXR_VERSION; ?>/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/<?php echo WXR_VERSION; ?>/"
>

<channel>
	<title><?php bloginfo_rss( 'name' );?></title>
	<link><?php bloginfo_rss( 'url' );?></link>
	<description><?php bloginfo_rss( 'description' );?></description>
	<pubDate><?php echo date( 'D, d M Y H:i:s +0000' ); ?></pubDate>
	<language><?php echo get_option( 'rss_language' ); ?></language>
	<wp:wxr_version><?php echo WXR_VERSION; ?></wp:wxr_version>
	<wp:base_site_url><?php echo trilisting_site_url(); ?></wp:base_site_url>
	<wp:base_blog_url><?php bloginfo_rss( 'url' );?></wp:base_blog_url>
	<?php trilisting_authors_list(); ?>
	<?php
	if ( $my_options['acf_posts'] ) {

		global $wp_query, $wpdb, $post;
		$wp_query->in_the_loop = true; // Fake being in the loop.

		// create SQL with %d placeholders
		$where = 'WHERE ID IN (' . substr( str_repeat( '%d,', count( $my_options['acf_posts'] ) ), 0, -1 ) . ')';
		// now prepare the SQL based on the %d + $_POST data
		$posts = $wpdb->get_results( $wpdb->prepare( "SELECT * FROM {$wpdb->posts} $where", $my_options['acf_posts'] ) );

		// Begin Loop
		foreach ( $posts as $post ) {
			setup_postdata($post);
			?>
			<item>
				<title><?php echo apply_filters('the_title_rss', $post->post_title); ?></title>
				<link><?php the_permalink_rss()?></link>
				<pubDate><?php echo mysql2date('D, d M Y H:i:s +0000', get_post_time('Y-m-d H:i:s', true), false); ?></pubDate>
				<dc:creator><?php echo get_the_author_meta('login'); ?></dc:creator>
				<guid isPermaLink="false"><?php esc_url(the_guid());?></guid>
				<wp:post_id><?php echo $post->ID; ?></wp:post_id>
				<wp:post_date><?php echo $post->post_date; ?></wp:post_date>
				<wp:post_date_gmt><?php echo $post->post_date_gmt; ?></wp:post_date_gmt>
				<wp:comment_status><?php echo $post->comment_status; ?></wp:comment_status>
				<wp:ping_status><?php echo $post->ping_status; ?></wp:ping_status>
				<wp:post_name><?php echo $post->post_name; ?></wp:post_name>
				<wp:status><?php echo $post->post_status; ?></wp:status>
				<wp:post_parent><?php echo $post->post_parent; ?></wp:post_parent>
				<wp:menu_order><?php echo $post->menu_order; ?></wp:menu_order>
				<wp:post_type><?php echo $post->post_type; ?></wp:post_type>
				<wp:post_password><?php echo $post->post_password; ?></wp:post_password>
				<?php
				$postmeta = $wpdb->get_results($wpdb->prepare("SELECT * FROM $wpdb->postmeta WHERE post_id = %d", $post->ID));
				foreach ( $postmeta as $meta ) :
					if ( '_edit_lock' != $meta->meta_key ) :

						$meta->meta_value = maybe_unserialize($meta->meta_value);
						$meta->meta_value = trilisting_fix_line_breaks($meta->meta_value);
						$meta->meta_value = maybe_serialize($meta->meta_value);

						?>
						<wp:postmeta>
							<wp:meta_key><?php echo $meta->meta_key; ?></wp:meta_key>
							<wp:meta_value><?php echo trilisting_cdata( $meta->meta_value ); ?></wp:meta_value>
						</wp:postmeta>
					<?php 
					endif;
				endforeach;
				?>
			</item>
		<?php
		}
	}
	?>
</channel>
</rss>
